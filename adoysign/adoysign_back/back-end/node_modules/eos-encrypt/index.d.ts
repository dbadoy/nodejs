/// <reference types="node" />
import { Crypt } from "eosjs-ecc";
import Long from "long";
export declare let MEMO: string;
/**
 * Encrypt Message
 *
 * @param {string} private_key EOSIO Private Key
 * @param {string} public_key EOSIO Public Key
 * @param {string} message Message to Encrypt
 * @param {object} [options={}] Optional parameters
 * @param {string} [options.memo="TO DECRYPT: eos-encrypt\n"] Serialized Memo
 * @param {number} [options.maxsize=256] Maximum character message size
 * @returns {string} Encrypted Message
 * @example
 *
 * const encrypted = encrypt(private_key, public_key, message);
 */
export declare function encrypt(private_key: string, public_key: string, message: string, options?: {
    memo?: string;
    maxsize?: number;
}): string;
/**
 * Decrypt Message
 *
 * @param {string} private_key EOSIO Private Key
 * @param {string} public_key EOSIO Public Key
 * @param {string} message Encrypted Message
 * @param {object} [options={}] Optional parameters
 * @param {string} [options.memo="TO DECRYPT: eos-encrypt\n"] Serialized Memo
 * @returns {string} Decrypted Message
 * @example
 *
 * const decrypted = decrypt(private_key, public_key, message);
 */
export declare function decrypt(private_key: string, public_key: string, message: string, options?: {
    memo?: string;
}): string;
/**
 * Serialize
 *
 * @private
 * @param {Crypt} buff Aes.encrypt => Object
 * @param {string} [memo="TO DECRYPT: eos-encrypt\n"] Serialized Memo
 * @returns {string} Serialized String
 * @example
 *
 * const buff = Aes.encrypt(private_key, public_key, message);
 * const str = serialize(buff);
 */
export declare function serialize(buff: Crypt, memo?: string): string;
/**
 * Deserialize
 *
 * @private
 * @param {string} message Message to deserialize
 * @param {string} [memo="TO DECRYPT: eos-encrypt\n"] Serialized Memo
 * @returns {Object} Deserialize Object
 * @example
 *
 * const { nonce, content, checksum } = deserialize(message);
 * const decrypted = Aes.decrypt(private_key, public_key, nonce, content, checksum);
 */
export declare function deserialize(message: string, memo?: string): {
    checksum: number;
    content: Buffer;
    nonce: Long;
};
/**
 * Set Default Memo
 *
 * @param {string} memo Set Memo
 * @returns {void}
 * @example
 *
 * setMemo("TO DECRYPT: my-dapp\n");
 */
export declare function setMemo(memo: string): void;
